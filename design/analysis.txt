Alexandra Butko
abutko
Section A

Competitive analysis
	
	In doing this analysis, I had to keep in mind that there is not a lot of variance in terms of chess games. Most features are generally fairly similar, and there is not a lot to "innovate" in this regard. That being said, there are several common features I can look at and see how I can incorporate them into my design.

	First, many different programs offer multiple difficulty levels, ranging from fast to slow (or, easy to difficult). I like this option, although I need to consider what is considered a "difficult" level of computer player. I would think that I could just search through less total moves (maybe look 2-3 moves ahead for easy and somewhere around 5+ for harder difficulties). I tend to think that the computer "players" move a little slow, and will probably try to design for efficiency and tend towards something "easier" (although this is intended to mean in terms of difficulty for a player, it probably carries over to difficulty in implementation).

	In terms of moving pieces, I've found I like when the possible moves for a selected piece are displayed (this can also help in testing to assert that my restrictions are in place). Along with this, I found one program that showed an arrow displaying the most recent move. For all versions (player v. player and player v. computer), I find this compelling because sometimes you will walk away/lose attention for a second, and this can help correct instances like that. Conversely, I dislike showing recent moves through the grid coordinates (that is, something like A7 to A5). Although I think it can be helpful to list on the board, I don't like this method of representation and will most likely not include the grid. To add to this, I have seen a few options in terms of moving, including dragging pieces from their location to another, clicking on the piece and then clicking again where you want it to be moved to, and the availability of both of the aforementioned options. While I think both are fine, I like the clicking option better and will most likely only include this.

	Some programs also include animations when the piece is moving from one location on the baord to another (as opposed to just appearing in the location). This would apply to the method of movement I'm using (clicking on the target piece and then the target location). Although this is a "nice" feature, I don't think it is completely necessary to include, and will probably only worry about it if I find myself at a comfortable point at the end. Still, I much prefer the option of clicking and "appearing," although I should consider that some users may not prefer the same options that I personally would.


	My previous point brings me to think about the the user interface. I see that most programs do not include some type of start menu, but I would like to include this, especially given the different "versions" of the game I intend to include. The flow of this will be shown on the storyboard (to be presented at my meeting on Tuesday). While it doesn't have to be included, I think it is a nice touch that will feel better and really emphasize the differences between the experiences, even if they all load the same game.

	I have not spent a large amount of time in any online player v. player versions, although I do not find those particularly relevent to my primary goal (implementing a local game or against a computer). Still, I do intend to spend more time as I progress towards a networked version exploring some options, although my implementation will be slightly different as I only plan to support two people at a time (who will have to know each other to be able to access the game). On a local game, I see that some programs will spin the board when it is the second player's turn. I do find this to be nice, although it could make some complications, as I'd have to modoifty either the view (keeping the same 2d list for a board) or the board itself (basically intevting the list). While the former is probably cleaner/more efficient, it could provide some confusing calculations that may end up being more trouble than it's worth. However, I still have to keep in mind the user, and will try to implement this if I can. For the networked version, this of course will not be necessary - I can just have the "bottom" of the board match the respective player from the start (and never change this).

	I can not speak extensively about the AI implementation because it is not possible to see how it is done in different games, but I have read a bit on the theory behind designing it. I know I'll be using some type of recursive algorithm to search through possible moves, basically learning how to implement a Minimax algorithm. Along with that, I'll need some type of evaluation to speed up the process (that is, not head down trees that are already worse than something that has been seen). 

	While there is not a lot to say about chess games (since they basically follow the same pattern), I do know I want to basically follow the norm and make a simple, easy-to-use interface, because the primary challenge from this project comes from designing the AI, not the experience itself (although I will obviously not sacrifice any quality in this area).
